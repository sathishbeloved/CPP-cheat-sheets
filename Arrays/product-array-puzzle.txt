/*
Given an array nums[] of size n, construct a Product Array P (of same size n) such that P[i] is equal to the product of all the elements of nums except nums[i].
Your Task:
You do not have to read input. Your task is to complete the function productExceptSelf() that takes array nums[] and n as input parameters and returns a list of n integers denoting the product array P. If the array has only one element the returned list should should contains one value i.e {1}
Note: Try to solve this problem without using the division operation.
*/
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
       vector<long long int> p;
       if(n == 1){
           p.push_back(1);
           return p;
       }  
       
       int count =0;
       for(int i=0;i<n;i++){
       long long int temp=1;
           for(int j=0;j<n;j++){
           if(i==j){
               continue;
           }
           else{
              temp = temp*nums[j];
            // cout<<"i: "<<i<<" j: "<<j<<" temp: "<<temp<<endl;
           }
           }
           
          p.push_back(temp);
           
           
       }
       return p;

    }